<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\template.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\template.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Sun Apr 09 14:56:51 2017
<BR><P>
<H3>Maximum Stack Usage =        152 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; SevenSegGroup::set(int) &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[17]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">ADC1_COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[17]">ADC1_COMP_IRQHandler</a> from startup_stm32f051x8.o(.text) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[27]">CEC_IRQHandler</a> from startup_stm32f051x8.o(.text) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[14]">DMA1_Channel1_IRQHandler</a> from startup_stm32f051x8.o(.text) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[15]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32f051x8.o(.text) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[16]">DMA1_Channel4_5_IRQHandler</a> from startup_stm32f051x8.o(.text) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[10]">EXTI0_1_IRQHandler</a> from digital.o(i.EXTI0_1_IRQHandler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[11]">EXTI2_3_IRQHandler</a> from digital.o(i.EXTI2_3_IRQHandler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[12]">EXTI4_15_IRQHandler</a> from digital.o(i.EXTI4_15_IRQHandler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f051x8.o(.text) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from system_stm32f0xx.o(i.HardFault_Handler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[21]">I2C1_IRQHandler</a> from i2c.o(i.I2C1_IRQHandler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[22]">I2C2_IRQHandler</a> from i2c.o(i.I2C2_IRQHandler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from system_stm32f0xx.o(i.NMI_Handler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[c]">PVD_IRQHandler</a> from startup_stm32f051x8.o(.text) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from system_stm32f0xx.o(i.PendSV_Handler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f051x8.o(.text) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f051x8.o(.text) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_stm32f051x8.o(.text) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[23]">SPI1_IRQHandler</a> from startup_stm32f051x8.o(.text) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[24]">SPI2_IRQHandler</a> from startup_stm32f051x8.o(.text) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from system_stm32f0xx.o(i.SVC_Handler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from system_stm32f0xx.o(i.SysTick_Handler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[28]">SystemInit</a> from system_stm32f0xx.o(i.SystemInit) referenced from startup_stm32f051x8.o(.text)
 <LI><a href="#[1d]">TIM14_IRQHandler</a> from timer.o(i.TIM14_IRQHandler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[1e]">TIM15_IRQHandler</a> from timer.o(i.TIM15_IRQHandler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[1f]">TIM16_IRQHandler</a> from timer.o(i.TIM16_IRQHandler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[20]">TIM17_IRQHandler</a> from timer.o(i.TIM17_IRQHandler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[18]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from timer.o(i.TIM1_BRK_UP_TRG_COM_IRQHandler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[19]">TIM1_CC_IRQHandler</a> from startup_stm32f051x8.o(.text) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[1a]">TIM2_IRQHandler</a> from timer.o(i.TIM2_IRQHandler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[1b]">TIM3_IRQHandler</a> from timer.o(i.TIM3_IRQHandler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[1c]">TIM6_DAC_IRQHandler</a> from timer.o(i.TIM6_DAC_IRQHandler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[13]">TSC_IRQHandler</a> from startup_stm32f051x8.o(.text) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[25]">USART1_IRQHandler</a> from serial.o(i.USART1_IRQHandler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[26]">USART2_IRQHandler</a> from serial.o(i.USART2_IRQHandler) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[b]">WWDG_IRQHandler</a> from startup_stm32f051x8.o(.text) referenced from startup_stm32f051x8.o(RESET)
 <LI><a href="#[2d]">tickMCU()</a> from main.o(i._Z7tickMCUv) referenced from main.o(i.main)
 <LI><a href="#[2f]">__main</a> from __main.o(!!!main) referenced from startup_stm32f051x8.o(.text)
 <LI><a href="#[2e]">__sti___10_Config_cpp_ticker</a> from config.o(i.__sti___10_Config_cpp_ticker) referenced from config.o(.init_array)
 <LI><a href="#[2c]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[2b]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[2a]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2f]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[31]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[33]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[9b]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[9c]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[34]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[9d]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[5f]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[35]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_d &rArr; _printf_u &rArr; _printf_o &rArr; _printf_x &rArr; _printf_l &rArr; _printf_c &rArr; _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[36]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_u &rArr; _printf_o &rArr; _printf_x &rArr; _printf_l &rArr; _printf_c &rArr; _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[38]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_o &rArr; _printf_x &rArr; _printf_l &rArr; _printf_c &rArr; _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[39]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_x &rArr; _printf_l &rArr; _printf_c &rArr; _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
</UL>

<P><STRONG><a name="[3a]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_l &rArr; _printf_c &rArr; _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_l
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[3c]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_l &rArr; _printf_c &rArr; _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[3e]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_l
</UL>

<P><STRONG><a name="[3f]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent_end
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[41]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[4a]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[9e]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[43]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[a0]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[a3]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[45]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[a4]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[a5]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[a6]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[a7]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[46]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[a8]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[a9]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[aa]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[ab]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[ac]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[ad]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[ae]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[af]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[b0]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[b1]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[b2]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[4f]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[b3]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[b4]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[b5]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[b6]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[b7]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[b8]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[b9]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[32]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[ba]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[47]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[49]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[bb]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[4b]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; SevenSegGroup::set(int) &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[bc]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[68]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[4e]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[bd]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[50]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f051x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051x8.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>__2sprintf</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegGroup::set(int)
</UL>

<P><STRONG><a name="[55]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[56]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[57]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[58]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[54]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[37]"></a>_printf_int_dec</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[5b]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, _printf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[3b]"></a>_printf_int_oct</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, _printf_oct_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[be]"></a>_printf_longlong_oct</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_oct_int.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>_printf_int_hex</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, _printf_hex_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[bf]"></a>_printf_longlong_hex</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_hex_int.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>__printf</STRONG> (Thumb, 386 bytes, Stack size 32 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[c0]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ticker::attach_us(void(*)(), unsigned)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmOut::PwmOut(PinName, unsigned, TIM_TypeDef*, TimerChannel)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmOut::write(unsigned char)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer::Timer(TIM_TypeDef*)
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegGroup::update()
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c1]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegGroup::update()
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegGroup::add(SevenSeg*)
</UL>

<P><STRONG><a name="[30]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, init_aeabi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[5a]"></a>_printf_int_common</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[53]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[2a]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[60]"></a>_printf_cs_common</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_mbtowc (Weak Reference)
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[40]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[62]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[63]"></a>_printf_lcs_common</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wc (Weak Reference)
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[42]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[65]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[5c]"></a>_wcrtomb</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, _wcrtomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[59]"></a>__rt_udiv10</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[66]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>

<P><STRONG><a name="[44]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
</UL>

<P><STRONG><a name="[4d]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[9a]"></a>strcmp</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[51]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[c2]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[10]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, digital.o(i.EXTI0_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI0_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, digital.o(i.EXTI2_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI2_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, digital.o(i.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI4_15_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_stm32f0xx.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>I2C1_IRQHandler</STRONG> (Thumb, 294 bytes, Stack size 8 bytes, i2c.o(i.I2C1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularBuffer::flush()
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularBuffer::count()
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularBuffer::put(unsigned char)
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularBuffer::get()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>I2C2_IRQHandler</STRONG> (Thumb, 294 bytes, Stack size 8 bytes, i2c.o(i.I2C2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularBuffer::flush()
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularBuffer::count()
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularBuffer::put(unsigned char)
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularBuffer::get()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_stm32f0xx.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_stm32f0xx.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_stm32f0xx.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_stm32f0xx.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>SysTick_Value</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, system_stm32f0xx.o(i.SysTick_Value))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay(unsigned)
</UL>

<P><STRONG><a name="[28]"></a>SystemInit</STRONG> (Thumb, 178 bytes, Stack size 8 bytes, system_stm32f0xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; NVIC_SetPriority(IRQn, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority(IRQn, unsigned)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock()
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(.text)
</UL>
<P><STRONG><a name="[1d]"></a>TIM14_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, timer.o(i.TIM14_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM14_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIM15_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, timer.o(i.TIM15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM15_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIM16_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, timer.o(i.TIM16_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM16_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIM17_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, timer.o(i.TIM17_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM17_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, timer.o(i.TIM1_BRK_UP_TRG_COM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM1_BRK_UP_TRG_COM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM2_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, timer.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM3_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, timer.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, timer.o(i.TIM6_DAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM6_DAC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>USART1_IRQHandler</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, serial.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularBuffer::count()
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularBuffer::put(unsigned char)
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularBuffer::get()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>USART2_IRQHandler</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, serial.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularBuffer::count()
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularBuffer::put(unsigned char)
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularBuffer::get()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051x8.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>Delay(unsigned)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, delay.o(i._Z5Delayj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Delay(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d]"></a>tickMCU()</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, main.o(i._Z7tickMCUv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = tickMCU() &rArr; SevenSegGroup::update() &rArr; SevenSeg::set(unsigned char) &rArr; SevenSeg::segments(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button::timer()
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegGroup::update()
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegGroup::timer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[75]"></a>Brightness::set(unsigned char)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, brightness.o(i._ZN10Brightness3setEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Brightness::set(unsigned char) &rArr; PwmOut::write(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmOut::write(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness::Brightness(PinName, unsigned, TIM_TypeDef*, TimerChannel)
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>Brightness::Brightness(PinName, unsigned, TIM_TypeDef*, TimerChannel)</STRONG> (Thumb, 42 bytes, Stack size 40 bytes, brightness.o(i._ZN10BrightnessC1E7PinNamejP11TIM_TypeDef12TimerChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Brightness::Brightness(PinName, unsigned, TIM_TypeDef*, TimerChannel) &rArr; PwmOut::PwmOut(PinName, unsigned, TIM_TypeDef*, TimerChannel) &rArr; GPIO::GPIO(PinName, PinMode) &rArr; GPIO::mode(PinMode)
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmOut::PwmOut(PinName, unsigned, TIM_TypeDef*, TimerChannel)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness::set(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_Config_cpp_ticker
</UL>

<P><STRONG><a name="[c5]"></a>Brightness::Brightness__sub_object(PinName, unsigned, TIM_TypeDef*, TimerChannel)</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, brightness.o(i._ZN10BrightnessC1E7PinNamejP11TIM_TypeDef12TimerChannel), UNUSED)

<P><STRONG><a name="[79]"></a>DigitalOut::DigitalOut(PinName)</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, digital.o(i._ZN10DigitalOutC1E7PinName))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DigitalOut::DigitalOut(PinName) &rArr; GPIO::GPIO(PinName, PinMode) &rArr; GPIO::mode(PinMode)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::GPIO(PinName, PinMode)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::write(unsigned)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::type(PinType)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::pull(PinPull)
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button::Button(PinName)
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_Config_cpp_ticker
</UL>

<P><STRONG><a name="[c6]"></a>DigitalOut::DigitalOut__sub_object(PinName)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, digital.o(i._ZN10DigitalOutC1E7PinName), UNUSED)

<P><STRONG><a name="[7e]"></a>DigitalOut::operator =(unsigned)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, digital.o(i._ZN10DigitalOutaSEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DigitalOut::operator =(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::write(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>SevenSegGroup::add(SevenSeg*)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, sevenseg.o(i._ZN13SevenSegGroup3addEP8SevenSeg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SevenSegGroup::add(SevenSeg*) &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>SevenSegGroup::set(int)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, sevenseg.o(i._ZN13SevenSegGroup3setEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = SevenSegGroup::set(int) &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73]"></a>SevenSegGroup::timer()</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, sevenseg.o(i._ZN13SevenSegGroup5timerEv))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tickMCU()
</UL>

<P><STRONG><a name="[74]"></a>SevenSegGroup::update()</STRONG> (Thumb, 372 bytes, Stack size 16 bytes, sevenseg.o(i._ZN13SevenSegGroup6updateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SevenSegGroup::update() &rArr; SevenSeg::set(unsigned char) &rArr; SevenSeg::segments(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSeg::segments(unsigned char)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSeg::set(unsigned char)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSeg::off()
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSeg::on()
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tickMCU()
</UL>

<P><STRONG><a name="[98]"></a>SevenSegGroup::SevenSegGroup()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sevenseg.o(i._ZN13SevenSegGroupC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_Config_cpp_ticker
</UL>

<P><STRONG><a name="[c7]"></a>SevenSegGroup::SevenSegGroup__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, sevenseg.o(i._ZN13SevenSegGroupC1Ev), UNUSED)

<P><STRONG><a name="[6a]"></a>CircularBuffer::get()</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, circularbuffer.o(i._ZN14CircularBuffer3getEv))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_IRQHandler
</UL>

<P><STRONG><a name="[6b]"></a>CircularBuffer::put(unsigned char)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, circularbuffer.o(i._ZN14CircularBuffer3putEh))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C::write(unsigned char, unsigned char*, unsigned char)
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_IRQHandler
</UL>

<P><STRONG><a name="[69]"></a>CircularBuffer::count()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, circularbuffer.o(i._ZN14CircularBuffer5countEv))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C::write(unsigned char, unsigned char*, unsigned char)
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_IRQHandler
</UL>

<P><STRONG><a name="[6c]"></a>CircularBuffer::flush()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, circularbuffer.o(i._ZN14CircularBuffer5flushEv))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_IRQHandler
</UL>

<P><STRONG><a name="[89]"></a>CircularBuffer::CircularBuffer(unsigned char*, unsigned short)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, circularbuffer.o(i._ZN14CircularBufferC1EPht))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C::I2C(I2C_TypeDef*, PinName, PinName)
</UL>

<P><STRONG><a name="[c8]"></a>CircularBuffer::CircularBuffer__sub_object(unsigned char*, unsigned short)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, circularbuffer.o(i._ZN14CircularBufferC1EPht), UNUSED)

<P><STRONG><a name="[87]"></a>I2C::busy()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, i2c.o(i._ZN3I2C4busyEv))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C::write(unsigned char, unsigned char*, unsigned char)
</UL>

<P><STRONG><a name="[86]"></a>I2C::write(unsigned char, unsigned char*, unsigned char)</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, i2c.o(i._ZN3I2C5writeEhPhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C::write(unsigned char, unsigned char*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularBuffer::count()
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularBuffer::put(unsigned char)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C::busy()
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>I2C::I2C(I2C_TypeDef*, PinName, PinName)</STRONG> (Thumb, 438 bytes, Stack size 40 bytes, i2c.o(i._ZN3I2CC1EP11I2C_TypeDef7PinNameS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C::I2C(I2C_TypeDef*, PinName, PinName) &rArr; GPIO::GPIO(PinName, PinMode) &rArr; GPIO::mode(PinMode)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::GPIO(PinName, PinMode)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::type(PinType)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::pull(PinPull)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::af(PinAF)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularBuffer::CircularBuffer(unsigned char*, unsigned short)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority(IRQn, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_Config_cpp_ticker
</UL>

<P><STRONG><a name="[c9]"></a>I2C::I2C__sub_object(I2C_TypeDef*, PinName, PinName)</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, i2c.o(i._ZN3I2CC1EP11I2C_TypeDef7PinNameS2_), UNUSED)

<P><STRONG><a name="[8a]"></a>GPIO::af(PinAF)</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gpio.o(i._ZN4GPIO2afE5PinAF))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO::af(PinAF)
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmOut::PwmOut(PinName, unsigned, TIM_TypeDef*, TimerChannel)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C::I2C(I2C_TypeDef*, PinName, PinName)
</UL>

<P><STRONG><a name="[8d]"></a>GPIO::mode(PinMode)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gpio.o(i._ZN4GPIO4modeE7PinMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO::mode(PinMode)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::GPIO(PinName, PinMode)
</UL>

<P><STRONG><a name="[7c]"></a>GPIO::pull(PinPull)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gpio.o(i._ZN4GPIO4pullE7PinPull))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO::pull(PinPull)
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmOut::PwmOut(PinName, unsigned, TIM_TypeDef*, TimerChannel)
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigitalOut::DigitalOut(PinName)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C::I2C(I2C_TypeDef*, PinName, PinName)
</UL>

<P><STRONG><a name="[92]"></a>GPIO::read()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gpio.o(i._ZN4GPIO4readEv))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button::update()
</UL>

<P><STRONG><a name="[7b]"></a>GPIO::type(PinType)</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gpio.o(i._ZN4GPIO4typeE7PinType))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO::type(PinType)
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmOut::PwmOut(PinName, unsigned, TIM_TypeDef*, TimerChannel)
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigitalOut::DigitalOut(PinName)
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C::I2C(I2C_TypeDef*, PinName, PinName)
</UL>

<P><STRONG><a name="[8c]"></a>GPIO::clock(unsigned)</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, gpio.o(i._ZN4GPIO5clockEj))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::GPIO(PinName, PinMode)
</UL>

<P><STRONG><a name="[7d]"></a>GPIO::write(unsigned)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(i._ZN4GPIO5writeEj))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigitalOut::operator =(unsigned)
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigitalOut::DigitalOut(PinName)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSeg::segments(unsigned char)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSeg::off()
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSeg::on()
</UL>

<P><STRONG><a name="[7a]"></a>GPIO::GPIO(PinName, PinMode)</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gpio.o(i._ZN4GPIOC1E7PinName7PinMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO::GPIO(PinName, PinMode) &rArr; GPIO::mode(PinMode)
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::clock(unsigned)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::mode(PinMode)
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmOut::PwmOut(PinName, unsigned, TIM_TypeDef*, TimerChannel)
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigitalOut::DigitalOut(PinName)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C::I2C(I2C_TypeDef*, PinName, PinName)
</UL>

<P><STRONG><a name="[ca]"></a>GPIO::GPIO__sub_object(PinName, PinMode)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, gpio.o(i._ZN4GPIOC1E7PinName7PinMode), UNUSED)

<P><STRONG><a name="[95]"></a>Timer::start()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timer.o(i._ZN5Timer5startEv))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ticker::attach_us(void(*)(), unsigned)
</UL>

<P><STRONG><a name="[8e]"></a>Timer::attach(void(*)())</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, timer.o(i._ZN5Timer6attachEPFvvE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Timer::attach(void(*)()) &rArr; NVIC_SetPriority(IRQn, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority(IRQn, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ticker::attach_us(void(*)(), unsigned)
</UL>

<P><STRONG><a name="[90]"></a>Timer::Timer(TIM_TypeDef*)</STRONG> (Thumb, 284 bytes, Stack size 16 bytes, timer.o(i._ZN5TimerC1EP11TIM_TypeDef))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Timer::Timer(TIM_TypeDef*)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ticker::Ticker(TIM_TypeDef*)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmOut::PwmOut(PinName, unsigned, TIM_TypeDef*, TimerChannel)
</UL>

<P><STRONG><a name="[cb]"></a>Timer::Timer__sub_object(TIM_TypeDef*)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, timer.o(i._ZN5TimerC1EP11TIM_TypeDef), UNUSED)

<P><STRONG><a name="[99]"></a>Button::get()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, button.o(i._ZN6Button3getEv))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>Button::timer()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, button.o(i._ZN6Button5timerEv))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tickMCU()
</UL>

<P><STRONG><a name="[91]"></a>Button::update()</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, button.o(i._ZN6Button6updateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Button::update()
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::read()
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>Button::Button(PinName)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, button.o(i._ZN6ButtonC1E7PinName))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Button::Button(PinName) &rArr; DigitalOut::DigitalOut(PinName) &rArr; GPIO::GPIO(PinName, PinMode) &rArr; GPIO::mode(PinMode)
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigitalOut::DigitalOut(PinName)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_Config_cpp_ticker
</UL>

<P><STRONG><a name="[cc]"></a>Button::Button__sub_object(PinName)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, button.o(i._ZN6ButtonC1E7PinName), UNUSED)

<P><STRONG><a name="[76]"></a>PwmOut::write(unsigned char)</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, timer.o(i._ZN6PwmOut5writeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PwmOut::write(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmOut::PwmOut(PinName, unsigned, TIM_TypeDef*, TimerChannel)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness::set(unsigned char)
</UL>

<P><STRONG><a name="[78]"></a>PwmOut::PwmOut(PinName, unsigned, TIM_TypeDef*, TimerChannel)</STRONG> (Thumb, 386 bytes, Stack size 48 bytes, timer.o(i._ZN6PwmOutC1E7PinNamejP11TIM_TypeDef12TimerChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = PwmOut::PwmOut(PinName, unsigned, TIM_TypeDef*, TimerChannel) &rArr; GPIO::GPIO(PinName, PinMode) &rArr; GPIO::mode(PinMode)
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmOut::write(unsigned char)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer::Timer(TIM_TypeDef*)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::GPIO(PinName, PinMode)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::type(PinType)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::pull(PinPull)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::af(PinAF)
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness::Brightness(PinName, unsigned, TIM_TypeDef*, TimerChannel)
</UL>

<P><STRONG><a name="[cd]"></a>PwmOut::PwmOut__sub_object(PinName, unsigned, TIM_TypeDef*, TimerChannel)</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, timer.o(i._ZN6PwmOutC1E7PinNamejP11TIM_TypeDef12TimerChannel), UNUSED)

<P><STRONG><a name="[94]"></a>Ticker::attach_us(void(*)(), unsigned)</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, timer.o(i._ZN6Ticker9attach_usEPFvvEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Ticker::attach_us(void(*)(), unsigned) &rArr; Timer::attach(void(*)()) &rArr; NVIC_SetPriority(IRQn, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer::attach(void(*)())
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer::start()
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[96]"></a>Ticker::Ticker(TIM_TypeDef*)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, timer.o(i._ZN6TickerC1EP11TIM_TypeDef))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Ticker::Ticker(TIM_TypeDef*) &rArr; Timer::Timer(TIM_TypeDef*)
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer::Timer(TIM_TypeDef*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_Config_cpp_ticker
</UL>

<P><STRONG><a name="[ce]"></a>Ticker::Ticker__sub_object(TIM_TypeDef*)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, timer.o(i._ZN6TickerC1EP11TIM_TypeDef), UNUSED)

<P><STRONG><a name="[84]"></a>SevenSeg::on()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sevenseg.o(i._ZN8SevenSeg2onEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SevenSeg::on()
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::write(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegGroup::update()
</UL>

<P><STRONG><a name="[85]"></a>SevenSeg::off()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sevenseg.o(i._ZN8SevenSeg3offEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SevenSeg::off()
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::write(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegGroup::update()
</UL>

<P><STRONG><a name="[83]"></a>SevenSeg::set(unsigned char)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, sevenseg.o(i._ZN8SevenSeg3setEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SevenSeg::set(unsigned char) &rArr; SevenSeg::segments(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSeg::segments(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegGroup::update()
</UL>

<P><STRONG><a name="[82]"></a>SevenSeg::segments(unsigned char)</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, sevenseg.o(i._ZN8SevenSeg8segmentsEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SevenSeg::segments(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::write(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSeg::set(unsigned char)
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegGroup::update()
</UL>

<P><STRONG><a name="[97]"></a>SevenSeg::SevenSeg(DigitalOut*, DigitalOut*)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sevenseg.o(i._ZN8SevenSegC1EP10DigitalOutS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SevenSeg::SevenSeg(DigitalOut*, DigitalOut*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_Config_cpp_ticker
</UL>

<P><STRONG><a name="[cf]"></a>SevenSeg::SevenSeg__sub_object(DigitalOut*, DigitalOut*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, sevenseg.o(i._ZN8SevenSegC1EP10DigitalOutS1_), UNUSED)

<P><STRONG><a name="[48]"></a>__user_setup_stackheap</STRONG> (Thumb, 28 bytes, Stack size 36 bytes, sys.o(i.__user_setup_stackheap))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[5e]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[4c]"></a>main</STRONG> (Thumb, 316 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = main &rArr; SevenSegGroup::set(int) &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ticker::attach_us(void(*)(), unsigned)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigitalOut::operator =(unsigned)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO::type(PinType)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay(unsigned)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button::update()
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button::get()
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegGroup::set(int)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegGroup::add(SevenSeg*)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness::set(unsigned char)
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C::write(unsigned char, unsigned char*, unsigned char)
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[2c]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[6d]"></a>SetSysClock()</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, system_stm32f0xx.o(i._Z11SetSysClockv))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[6f]"></a>NVIC_SetPriority(IRQn, unsigned)</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, system_stm32f0xx.o(i._Z16NVIC_SetPriority4IRQnj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority(IRQn, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[8f]"></a>NVIC_SetPriority(IRQn, unsigned)</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, timer.o(i._Z16NVIC_SetPriority4IRQnj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority(IRQn, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer::attach(void(*)())
</UL>

<P><STRONG><a name="[8b]"></a>NVIC_SetPriority(IRQn, unsigned)</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, i2c.o(i._Z16NVIC_SetPriority4IRQnj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority(IRQn, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C::I2C(I2C_TypeDef*, PinName, PinName)
</UL>

<P><STRONG><a name="[2e]"></a>__sti___10_Config_cpp_ticker</STRONG> (Thumb, 250 bytes, Stack size 8 bytes, config.o(i.__sti___10_Config_cpp_ticker))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __sti___10_Config_cpp_ticker &rArr; Brightness::Brightness(PinName, unsigned, TIM_TypeDef*, TimerChannel) &rArr; PwmOut::PwmOut(PinName, unsigned, TIM_TypeDef*, TimerChannel) &rArr; GPIO::GPIO(PinName, PinMode) &rArr; GPIO::mode(PinMode)
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ticker::Ticker(TIM_TypeDef*)
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigitalOut::DigitalOut(PinName)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSeg::SevenSeg(DigitalOut*, DigitalOut*)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button::Button(PinName)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegGroup::SevenSegGroup()
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness::Brightness(PinName, unsigned, TIM_TypeDef*, TimerChannel)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C::I2C(I2C_TypeDef*, PinName, PinName)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config.o(.init_array)
</UL>
<P><STRONG><a name="[2b]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[67]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[61]"></a>_printf_mbtowc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[64]"></a>_printf_wc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<HR></body></html>
